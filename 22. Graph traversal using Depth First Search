#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

typedef struct graph {
    int n;
    int adj_mat[MAX_VERTICES][MAX_VERTICES];
} Graph;

Graph *create_graph(int n) {
    Graph *g = (Graph *) malloc(sizeof(Graph));
    g->n = n;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            g->adj_mat[i][j] = 0;
        }
    }

    return g;
}

void add_edge(Graph *g, int u, int v) {
    g->adj_mat[u][v] = 1;
    g->adj_mat[v][u] = 1;
}

void dfs(Graph *g, int u, bool visited[]) {
    visited[u] = true;
    printf("%d ", u);

    for (int v = 0; v < g->n; v++) {
        if (g->adj_mat[u][v] == 1 && !visited[v]) {
            dfs(g, v, visited);
        }
    }
}

int main() {
    Graph *g = create_graph(4);
    add_edge(g, 0, 1);
    add_edge(g, 0, 2);
    add_edge(g, 1, 2);
    add_edge(g, 2, 0);
    add_edge(g, 2, 3);
    add_edge(g, 3, 3);

    bool visited[g->n];
    for (int i = 0; i < g->n; i++) {
        visited[i] = false;
    }

    printf("Following is Depth First Traversal starting from vertex 2:\n");
    dfs(g, 2, visited);

    return 0;
}
