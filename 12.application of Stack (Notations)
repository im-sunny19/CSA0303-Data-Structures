#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_SIZE 100

struct Stack {
    int top;
    int items[MAX_SIZE];
};

void push(struct Stack *stack, int x) {
    if (stack->top == MAX_SIZE - 1) {
        printf("Error: stack overflow\n");
        return;
    }
    stack->items[++stack->top] = x;
}

int pop(struct Stack *stack) {
    if (stack->top == -1) {
        printf("Error: stack underflow\n");
        return -1;
    }
    return stack->items[stack->top--];
}

int isDigit(char ch) {
    return isdigit(ch);
}

int performOperation(char operation, int operand1, int operand2) {
    switch (operation) {
        case '+': return operand1 + operand2;
        case '-': return operand1 - operand2;
        case '*': return operand1 * operand2;
        case '/': return operand1 / operand2;
        default: printf("Error: unknown operator %c\n", operation);
                 return -1;
    }
}

int evaluatePostfix(char *expression) {
    struct Stack stack;
    stack.top = -1;
    for (int i = 0; expression[i]; i++) {
        if (isDigit(expression[i])) {
            push(&stack, expression[i] - '0');
        } else {
            int operand2 = pop(&stack);
            int operand1 = pop(&stack);
            int result = performOperation(expression[i], operand1, operand2);
            push(&stack, result);
        }
    }
    return pop(&stack);
}

int main() {
    char expression[] = "231*+9-";
    int result = evaluatePostfix(expression);
    printf("Result of expression %s = %d\n", expression, result);
    return 0;
}
